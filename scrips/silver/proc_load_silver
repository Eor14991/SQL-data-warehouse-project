CREATE OR ALTER PROCEDURE silver.load_silver_layer
AS
BEGIN
    BEGIN TRY
        DECLARE 
            @start_time DATETIME,
            @end_time DATETIME,
            @total_start_time DATETIME,
            @total_end_time DATETIME;

        SET @total_start_time = GETDATE();

        PRINT '==================================================';
        PRINT 'Starting Silver Layer Load';
        PRINT '==================================================';

        --------------------------------------------------
        PRINT 'Loading CRM Tables';
        --------------------------------------------------

        -- crm_cust_info
        SET @start_time = GETDATE();
        PRINT '>> Truncating Table silver.crm_cust_info';
        TRUNCATE TABLE silver.crm_cust_info;

        PRINT '>> Inserting into Table silver.crm_cust_info';
        INSERT INTO silver.crm_cust_info (
            cst_id,
            cst_key,
            cst_firstname,
            cst_lastname,
            cst_marital_status,
            cst_gndr,
            cst_create_date
        )
        SELECT 
            cst_id,
            cst_key,
            TRIM(cst_firstname),
            TRIM(cst_lastname),
            CASE 
                WHEN UPPER(TRIM(cst_marital_status)) = 'S' THEN 'Single'
                WHEN UPPER(TRIM(cst_marital_status)) = 'M' THEN 'Married'
                ELSE 'N/A'
            END,
            CASE 
                WHEN UPPER(TRIM(cst_gndr)) = 'F' THEN 'Female'
                WHEN UPPER(TRIM(cst_gndr)) = 'M' THEN 'Male'
                ELSE 'N/A'
            END,
            cst_create_date
        FROM (
            SELECT *,
                   ROW_NUMBER() OVER (PARTITION BY cst_id ORDER BY cst_create_date DESC) AS flag
            FROM bronze.crm_cust_info
        ) t
        WHERE flag = 1 
          AND cst_id IS NOT NULL 
          AND cst_key IS NOT NULL;

        SET @end_time = GETDATE();
        PRINT '>>>>> Load Duration: ' + CONVERT(VARCHAR(10), DATEDIFF(SECOND, @start_time, @end_time)) + ' seconds';
        PRINT '--------------------------------------------------';

        -- crm_prd_info
        SET @start_time = GETDATE();
        PRINT '>> Truncating Table silver.crm_prd_info';
        TRUNCATE TABLE silver.crm_prd_info;

        PRINT '>> Inserting into Table silver.crm_prd_info';
        INSERT INTO silver.crm_prd_info (
            prd_id,
            cat_id,
            prd_key,
            prd_nm,
            prd_cost,
            prd_line,
            prd_start_dt,
            prd_end_dt
        )
        SELECT 
            prd_id,
            REPLACE(SUBSTRING(prd_key,1,5),'-','_') AS cat_id,
            SUBSTRING(prd_key,7,LEN(prd_key)) AS prd_key,
            prd_nm,
            ISNULL(prd_cost,0),
            CASE UPPER(TRIM(prd_line))
                WHEN 'M' THEN 'Mountain'
                WHEN 'R' THEN 'Road'
                WHEN 'S' THEN 'Other Sales'
                WHEN 'T' THEN 'Touring'
                ELSE 'N/A'
            END,
            CAST(prd_start_dt AS DATE),
            CAST(DATEADD(DAY,-1,LEAD(prd_start_dt) OVER (PARTITION BY prd_key ORDER BY prd_start_dt)) AS DATE)
        FROM bronze.crm_prd_info;

        SET @end_time = GETDATE();
        PRINT '>>>>> Load Duration: ' + CONVERT(VARCHAR(10), DATEDIFF(SECOND, @start_time, @end_time)) + ' seconds';
        PRINT '--------------------------------------------------';

        --------------------------------------------------
        PRINT 'Loading Sales Tables';
        --------------------------------------------------

        SET @start_time = GETDATE();
        PRINT '>> Truncating Table silver.crm_sales_details';
        TRUNCATE TABLE silver.crm_sales_details;

        PRINT '>> Inserting into Table silver.crm_sales_details';
        INSERT INTO silver.crm_sales_details (
            sls_ord_num,
            sls_prd_key,
            sls_cust_id,
            sls_order_dt,
            sls_ship_dt,
            sls_due_dt,
            sls_quantity,
            sls_price,
            sls_sales
        )
        SELECT 
            sls_ord_num,
            sls_prd_key,
            sls_cust_id,
            CASE WHEN sls_order_dt < 0 OR LEN(CAST(sls_order_dt AS varchar(8))) > 8 THEN NULL
                 ELSE TRY_CAST(CAST(sls_order_dt AS varchar(8)) AS DATE) END,
            CASE WHEN sls_ship_dt < 0 OR LEN(CAST(sls_ship_dt AS varchar(8))) > 8 THEN NULL
                 ELSE TRY_CAST(CAST(sls_ship_dt AS varchar(8)) AS DATE) END,
            CASE WHEN sls_due_dt < 0 OR LEN(CAST(sls_due_dt AS varchar(8))) > 8 THEN NULL
                 ELSE TRY_CAST(CAST(sls_due_dt AS varchar(8)) AS DATE) END,
            CASE WHEN sls_quantity <= 0 OR sls_quantity IS NULL THEN ABS(sls_sales)/NULLIF(sls_price,0) ELSE ABS(sls_quantity) END,
            CASE WHEN sls_price <= 0 OR sls_price IS NULL THEN ABS(sls_sales)/NULLIF(sls_quantity,0) ELSE sls_price END,
            CASE WHEN sls_sales <= 0 OR sls_sales IS NULL OR sls_sales != ABS(sls_quantity)*sls_price THEN ABS(sls_quantity)*sls_price ELSE sls_sales END
        FROM bronze.crm_sales_details;

        SET @end_time = GETDATE();
        PRINT '>>>>> Load Duration: ' + CONVERT(VARCHAR(10), DATEDIFF(SECOND, @start_time, @end_time)) + ' seconds';
        PRINT '--------------------------------------------------';

        --------------------------------------------------
        PRINT 'Loading ERP Tables';
        --------------------------------------------------

        -- erp_CUST_AZ12
        SET @start_time = GETDATE();
        PRINT '>> Truncating Table silver.erp_CUST_AZ12';
        TRUNCATE TABLE silver.erp_CUST_AZ12;

        PRINT '>> Inserting into Table silver.erp_CUST_AZ12';
        INSERT INTO silver.erp_CUST_AZ12 (
            CID,
            BDATE,
            GEN
        )
        SELECT
            CASE WHEN CID LIKE 'NAS%' THEN SUBSTRING(CID,4,LEN(CID)) ELSE CID END,
            CASE WHEN BDATE > GETDATE() THEN NULL ELSE BDATE END,
            CASE WHEN UPPER(TRIM(GEN)) LIKE 'F%' THEN 'Female'
                 WHEN UPPER(TRIM(GEN)) LIKE 'M%' THEN 'Male'
                 ELSE 'n/a' END
        FROM bronze.erp_CUST_AZ12;

        SET @end_time = GETDATE();
        PRINT '>>>>> Load Duration: ' + CONVERT(VARCHAR(10), DATEDIFF(SECOND, @start_time, @end_time)) + ' seconds';
        PRINT '--------------------------------------------------';

        -- erp_LOC_A101
        SET @start_time = GETDATE();
        PRINT '>> Truncating Table silver.erp_LOC_A101';
        TRUNCATE TABLE silver.erp_LOC_A101;

        PRINT '>> Inserting into Table silver.erp_LOC_A101';
        INSERT INTO silver.erp_LOC_A101 (
            CID,
            CNTRY
        )
        SELECT
            REPLACE(CID,'-',''),
            CASE 
                WHEN CLEANED_CNTRY = '' OR CLEANED_CNTRY IS NULL THEN 'N/A'
                WHEN CLEANED_CNTRY LIKE 'DE%' THEN 'Germany'
                WHEN CLEANED_CNTRY LIKE 'US%' THEN 'United States'
                ELSE UPPER(LEFT(CLEANED_CNTRY,1)) + LOWER(SUBSTRING(CLEANED_CNTRY,2,LEN(CLEANED_CNTRY)))
            END
        FROM (
            SELECT CID,
                   LEFT(TRIM(TRANSLATE(CNTRY, CHAR(9)+CHAR(10)+CHAR(13)+CHAR(160)+NCHAR(8203),'     ')),50) AS CLEANED_CNTRY
            FROM bronze.erp_LOC_A101
        ) t;

        SET @end_time = GETDATE();
        PRINT '>>>>> Load Duration: ' + CONVERT(VARCHAR(10), DATEDIFF(SECOND, @start_time, @end_time)) + ' seconds';
        PRINT '--------------------------------------------------';

        -- erp_PX_CAT_G1V2
        SET @start_time = GETDATE();
        PRINT '>> Truncating Table silver.erp_PX_CAT_G1V2';
        TRUNCATE TABLE silver.erp_PX_CAT_G1V2;

        PRINT '>> Inserting into Table silver.erp_PX_CAT_G1V2';
        INSERT INTO silver.erp_PX_CAT_G1V2 (
            ID,
            CAT,
            SUBCAT,
            MAINTENANCE
        )
        SELECT ID,CAT,SUBCAT,MAINTENANCE
        FROM bronze.erp_PX_CAT_G1V2;

        SET @end_time = GETDATE();
        PRINT '>>>>> Load Duration: ' + CONVERT(VARCHAR(10), DATEDIFF(SECOND, @start_time, @end_time)) + ' seconds';

        SET @total_end_time = GETDATE();
        PRINT '==================================================';
        PRINT 'Finished Silver Layer Load Successfully';
        PRINT '>>>>> Total Load Duration: ' + CONVERT(VARCHAR(10), DATEDIFF(SECOND,@total_start_time,@total_end_time)) + ' seconds';
        PRINT '==================================================';

    END TRY
    BEGIN CATCH
        PRINT '=========================================';
        PRINT 'ERROR IN LOADING SILVER LAYER';
        PRINT 'ERROR MESSAGE: ' + ERROR_MESSAGE();
        PRINT 'ERROR NUMBER: ' + CAST(ERROR_NUMBER() AS VARCHAR(10));
        PRINT '=========================================';
    END CATCH;
END;
GO

-- Execute the procedure
EXEC silver.load_silver_layer;
